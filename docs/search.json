[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Waring. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Waring D (2023). BrAPI: BrAPI. R package version 0.2.","code":"@Manual{,   title = {BrAPI: BrAPI},   author = {David Waring},   year = {2023},   note = {R package version 0.2}, }"},{"path":"/index.html","id":"brapir","dir":"","previous_headings":"","what":"BrAPI","title":"BrAPI","text":"R package contains simple R6 Class interacting BrAPI server. holds information needed connect server (hostname) helper functions making HTTP requests BrAPI server. knowledge currently supported BrAPI endpoints. ’ll need refer BrAPI specification know endpoints use response formatted.","code":"# Get a BrAPI Connection > wheat <- getBrAPIConnection(\"T3/Wheat\")  # Get Studies associated with the Cornell breeding program > resp <- wheat$get(\"/studies\", query=list(programName=\"Cornell University\"), pageSize=1000) > studies <- resp$data   # Get all Germplasm stored in the database > resp <- wheat$get(\"/germplasm\", page=\"all\", pageSize=5000) > germplasm <- resp$combined_data"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"BrAPI","text":"package can installed directly GitHub, using devtools package.","code":"# Install devtools, if you haven't already install.packages(\"devtools\")  # Install the BrAPI package from GitHub library(devtools) install_github(\"TriticeaeToolbox/BrAPI.R\") library(BrAPI)"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"BrAPI","text":"Reference Documentation can found : https://triticeaetoolbox.github.io/BrAPI.R","code":""},{"path":"/index.html","id":"creating-a-brapi-connection","dir":"","previous_headings":"","what":"Creating a BrAPI Connection","title":"BrAPI","text":"BrAPIConnection Class contains information BrAPI server helper functions making HTTP requests. known pre-configured BrAPI connections included package. see list known BrAPI connections, use listBrAPIConnections() function: use known BrAPI connection, reference name getBrAPIConnection() function: manually create BrAPI connection, ’ll need specify host BrAPI server (optionally set protocol, path, /version) createBrAPIConnection() function:","code":"> listBrAPIConnections() Known BrAPI Connections:  T3/Wheat = wheat.triticeaetoolbox.org [v2]  T3/Wheat Sandbox = wheat-sandbox.triticeaetoolbox.org [v2]  T3/Oat = oat.triticeaetoolbox.org [v2]  T3/Oat Sandbox = oat-sandbox.triticeaetoolbox.org [v2]  T3/Barley = barley.triticeaetoolbox.org [v2]  T3/Barley Sandbox = barley-sandbox.triticeaetoolbox.org [v2]  Cassavabase = cassavabase.org [v2] > wheat <- getBrAPIConnection(\"T3/Wheat\") > kelp <- createBrAPIConnection(\"sugarkelpbase.org\") > kelpv1 <- createBrAPIConnection(\"sugarkelpbase.org\", version=\"v1\")"},{"path":"/index.html","id":"making-http-requests","dir":"","previous_headings":"","what":"Making HTTP Requests","title":"BrAPI","text":"BrAPIConnection object, can use make HTTP Requests BrAPI server. separate helper function type HTTP request. conn$get() function - make GET request conn$post() function - make POST request conn$put() function - make PUT request","code":""},{"path":"/index.html","id":"request-parameters","dir":"","previous_headings":"Making HTTP Requests","what":"Request Parameters","title":"BrAPI","text":"request functions (get, post, put) can take following parameters: call - BrAPI endpoint make request query - (optional) named list query parameters body - (optional) named list vector body parameters (automatically converted JSON) page=\"\", available pages fetched sequentially response properties individual pages along combined data pages returned pageSize - maximum size page results return","code":""},{"path":"/index.html","id":"response-format","dir":"","previous_headings":"Making HTTP Requests","what":"Response Format","title":"BrAPI","text":"return value request functions (get, post, put) return named list containing properties Response. singe-page request: response - httr response object status - parsed HTTP status content - full content body response metadata - metadata object body reponse, returned data - data object body response, returned multi-page request (page=\"\"): response - list httr response object page status - list parsed HTTP status page content - list full content body response page metadata - list metadata object body response page, returned data - list data object body response page, returned combined_data - combined vector data pages, returned","code":""},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"BrAPI","text":"","code":"# GET Request > wheat <- getBrAPIConnection(\"T3/Wheat\") > resp <- wheat$get(\"/studies\", query=list(programName=\"Cornell University\"))  # POST Request > sandbox <- BrAPIConnection$new(\"wheat-sandbox.triticeaetoolbox.org\") > d1 <- list(observationUnitDbId=\"ou1\", observationVariableDbId=\"ov1\", value=50) > d2 <- list(observationUnitDbId=\"ou2\", observationVariableDbId=\"ov1\", value=40) > data <- list(d1, d2) > resp <- sandbox$post(\"/token\", query=list(username=\"testing\", password=\"testing123\")) > resp <- sandbox$post(\"/observations\", body=data, token=resp$content$access_token)  # PUT Request > sandbox <- BrAPIConnection$new(\"wheat-sandbox.triticeaetoolbox.org\") > d1 <- list(observationDbId = \"ob1\", observationUnitDbId=\"ou1\", observationVariableDbId=\"ov1\", value=60) > d2 <- list(observationDbId = \"ob2\", observationUnitDbId=\"ou2\", observationVariableDbId=\"ov1\", value=70) > data <- list(d1, d2) > resp <- sandbox$post(\"/token\", query=list(username=\"testing\", password=\"testing123\")) > resp <- sandbox$put(\"/observations\", body=data, token=resp$content$access_token)"},{"path":"/reference/BrAPIConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"BrAPI Connection Class — BrAPIConnection","title":"BrAPI Connection Class — BrAPIConnection","text":"BrAPI Connection Class BrAPI Connection Class","code":""},{"path":"/reference/BrAPIConnection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BrAPI Connection Class — BrAPIConnection","text":"R6 Class representing connection BrAPI server. Class provides information needed connecting BrAPI server. host field required.  fields, default value used one provided. Class also provides helper functions making requests BrAPI server.  Use conn$get() make GET request, conn$post() make POST request, conn$put() make PUT request. return value request function contains named list properties Response(s). singe-page request: response = httr response object status = parsed HTTP status content = full content body response metadata = metadata object body reponse, returned data = data object body response, returned multi-page request (page=\"\"): response = list httr response object page status = list parsed HTTP status page content = list full content body response page metadata = list metadata object body response page, returned data = list data object body response page, returned combined_data = combined vector data pages, returned","code":""},{"path":"/reference/BrAPIConnection.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"BrAPI Connection Class — BrAPIConnection","text":"protocol HTTP protocol - either 'http' 'https' (Default: https) host hostname BrAPI server path base bath BrAPI endpoints (including version) (Default: /brapi/) version BrAPI version ('v1' 'v2') (Default: v2)","code":""},{"path":[]},{"path":"/reference/BrAPIConnection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BrAPI Connection Class — BrAPIConnection","text":"BrAPIConnection$new() BrAPIConnection$get() BrAPIConnection$post() BrAPIConnection$put() BrAPIConnection$clone()","code":""},{"path":"/reference/BrAPIConnection.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"BrAPI Connection Class — BrAPIConnection","text":"Create new BrAPIConnection object","code":""},{"path":"/reference/BrAPIConnection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BrAPI Connection Class — BrAPIConnection","text":"","code":"BrAPIConnection$new(host, protocol = \"https\", path = \"/brapi/\", version = \"v2\")"},{"path":"/reference/BrAPIConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BrAPI Connection Class — BrAPIConnection","text":"host (required) hostname BrAPI server protocol (optional) HTTP protocol - either 'http' 'https' path (optional) base path BrAPI endpoints version (optional) BrAPI version","code":""},{"path":"/reference/BrAPIConnection.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BrAPI Connection Class — BrAPIConnection","text":"BrAPIConnection object","code":""},{"path":"/reference/BrAPIConnection.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"BrAPI Connection Class — BrAPIConnection","text":"Make GET request","code":""},{"path":"/reference/BrAPIConnection.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BrAPI Connection Class — BrAPIConnection","text":"","code":"BrAPIConnection$get(call, ...)"},{"path":"/reference/BrAPIConnection.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BrAPI Connection Class — BrAPIConnection","text":"call BrAPI endpoint request ... (optional) Additional arguments passed httr query (optional) named list query parameters page (optional) index page results (use '' get pages) (Default: 0) pageSize (optional) max size result pages (Default: 10) token (optional) Authorization token add request","code":""},{"path":"/reference/BrAPIConnection.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"BrAPI Connection Class — BrAPIConnection","text":"named list Response properties","code":""},{"path":"/reference/BrAPIConnection.html","id":"method-post-","dir":"Reference","previous_headings":"","what":"Method post()","title":"BrAPI Connection Class — BrAPIConnection","text":"Make POST request","code":""},{"path":"/reference/BrAPIConnection.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BrAPI Connection Class — BrAPIConnection","text":"","code":"BrAPIConnection$post(call, ...)"},{"path":"/reference/BrAPIConnection.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"BrAPI Connection Class — BrAPIConnection","text":"call BrAPI endpoint request ... (optional) Additional arguments passed httr query (optional) named list query parameters body (optional) named list vector request body (converted JSON) page (optional) index page results (use '' get pages) (Default: 0) pageSize (optional) max size result pages (Default: 10) token (optional) Authorization token add request","code":""},{"path":"/reference/BrAPIConnection.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"BrAPI Connection Class — BrAPIConnection","text":"named list Response properties","code":""},{"path":"/reference/BrAPIConnection.html","id":"method-put-","dir":"Reference","previous_headings":"","what":"Method put()","title":"BrAPI Connection Class — BrAPIConnection","text":"Make PUT request","code":""},{"path":"/reference/BrAPIConnection.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"BrAPI Connection Class — BrAPIConnection","text":"","code":"BrAPIConnection$put(call, ...)"},{"path":"/reference/BrAPIConnection.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"BrAPI Connection Class — BrAPIConnection","text":"call BrAPI endpoint request ... (optional) Additional arguments passed httr query (optional) named list query parameters body (optional) named list vector request body (converted JSON) page (optional) index page results (use '' get pages) (Default: 0) pageSize (optional) max size result pages (Default: 10) token (optional) Authorization token add request","code":""},{"path":"/reference/BrAPIConnection.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"BrAPI Connection Class — BrAPIConnection","text":"named list Response properties","code":""},{"path":"/reference/BrAPIConnection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BrAPI Connection Class — BrAPIConnection","text":"objects class cloneable method.","code":""},{"path":"/reference/BrAPIConnection.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"BrAPI Connection Class — BrAPIConnection","text":"","code":"BrAPIConnection$clone(deep = FALSE)"},{"path":"/reference/BrAPIConnection.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"BrAPI Connection Class — BrAPIConnection","text":"deep Whether make deep clone.","code":""},{"path":"/reference/BrAPIConnection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BrAPI Connection Class — BrAPIConnection","text":"","code":"# Directly Creating a new BrAPIConnection Object wheat <- BrAPIConnection$new(\"wheat.triticeaetoolbox.org\") wheatv1 <- BrAPIConnection$new(\"wheat.triticeaetoolbox.org\", version=\"v1\")  # Using the createBrAPIConnection function barley <- createBrAPIConnection(\"barley.triticeaetoolbox.org\") barleyv1 <- createBrAPIConnection(\"barley.triticeaetoolbox.org\", version=\"v1\")  # Making a GET request resp <- wheat$get(\"/germplasm\", pageSize=100) #> Response [GET] <https://wheat.triticeaetoolbox.org/brapi/v2/germplasm?page=0&pageSize=100> #>   Success: (200) OK #>   Content Type: application/json #>   Pagination: page 0 of 434 [pageSize = 100] resp <- wheat$get(\"/studies\", pageSize=1000, page=\"all\") #> Response [GET] <https://wheat.triticeaetoolbox.org/brapi/v2/studies?page=0&pageSize=1000> #>   Success: (200) OK #>   Content Type: application/json #>   Pagination: page 0 of 4 [pageSize = 1000] #> Response [GET] <https://wheat.triticeaetoolbox.org/brapi/v2/studies?page=1&pageSize=1000> #>   Success: (200) OK #>   Content Type: application/json #>   Pagination: page 1 of 4 [pageSize = 1000] #> Response [GET] <https://wheat.triticeaetoolbox.org/brapi/v2/studies?page=2&pageSize=1000> #>   Success: (200) OK #>   Content Type: application/json #>   Pagination: page 2 of 4 [pageSize = 1000] #> Response [GET] <https://wheat.triticeaetoolbox.org/brapi/v2/studies?page=3&pageSize=1000> #>   Success: (200) OK #>   Content Type: application/json #>   Pagination: page 3 of 4 [pageSize = 1000] resp <- wheat$get(\"/studies\", query=list(programName=\"Cornell University\"), pageSize=1000) #> Response [GET] <https://wheat.triticeaetoolbox.org/brapi/v2/studies?programName=Cornell%20University&page=0&pageSize=1000> #>   Success: (200) OK #>   Content Type: application/json #>   Pagination: page 0 of 1 [pageSize = 1000]  # Make a POST request if (FALSE) { sandbox <- BrAPIConnection$new(\"wheat-sandbox.triticeaetoolbox.org\") d1 <- list(observationUnitDbId=\"ou1\", observationVariableDbId=\"ov1\", value=50) d2 <- list(observationUnitDbId=\"ou2\", observationVariableDbId=\"ov1\", value=40) data <- list(d1, d2) resp <- sandbox$post(\"/token\", query=list(username=\"testing\", password=\"testing123\")) resp <- sandbox$post(\"/observations\", body=data, token=resp$content$access_token) }"},{"path":"/reference/BrAPIRequest.html","id":null,"dir":"Reference","previous_headings":"","what":"BrAPI Request — BrAPIRequest","title":"BrAPI Request — BrAPIRequest","text":"Make BrAPI request using provided BrAPIConnection method specified BrAPI call.  BrAPIConnection provides BrAPI server details (hostname path), method specifies HTTP method (GET, POST, etc) call specifies specific BrAPI endpoint request.","code":""},{"path":"/reference/BrAPIRequest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BrAPI Request — BrAPIRequest","text":"","code":"BrAPIRequest(   method,   base,   call,   ...,   query = list(),   body = list(),   page = 0,   pageSize = 10,   token = NULL )"},{"path":"/reference/BrAPIRequest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BrAPI Request — BrAPIRequest","text":"method HTTP Method use base base URL BrAPI endpoints call BrAPI endpoint request query named list query parameters body named list vector POST request's body page page results return (Default: 0). set '', pageSize size page results return (Default: 10) token Authorization Token added Authorization Header","code":""},{"path":"/reference/BrAPIRequest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BrAPI Request — BrAPIRequest","text":"named list containing Response properties","code":""},{"path":"/reference/BrAPIRequest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BrAPI Request — BrAPIRequest","text":"cases, call function directly.  Instead use helper functions provided BrAPIConnection object.  example: wheat <- getBrAPIConnection(\"T3/Wheat\") resp <- wheat$get(\"/germplasm\", pageSize=500) resp <- wheat$post(\"/observations\", body=data)","code":""},{"path":"/reference/KNOWN_BRAPI_CONNECTIONS.html","id":null,"dir":"Reference","previous_headings":"","what":"Known BrAPI Connections — KNOWN_BRAPI_CONNECTIONS","title":"Known BrAPI Connections — KNOWN_BRAPI_CONNECTIONS","text":"list pre-configured BrAPIConnections known BrAPI servers","code":""},{"path":"/reference/KNOWN_BRAPI_CONNECTIONS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Known BrAPI Connections — KNOWN_BRAPI_CONNECTIONS","text":"","code":"KNOWN_BRAPI_CONNECTIONS"},{"path":"/reference/KNOWN_BRAPI_CONNECTIONS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Known BrAPI Connections — KNOWN_BRAPI_CONNECTIONS","text":"object class list length 7.","code":""},{"path":"/reference/createBrAPIConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"Create BrAPI Connection — createBrAPIConnection","title":"Create BrAPI Connection — createBrAPIConnection","text":"Create BrAPI connection specified host","code":""},{"path":"/reference/createBrAPIConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create BrAPI Connection — createBrAPIConnection","text":"","code":"createBrAPIConnection(   host = NULL,   protocol = NULL,   path = NULL,   version = NULL )"},{"path":"/reference/createBrAPIConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create BrAPI Connection — createBrAPIConnection","text":"host BrAPI server hostname protocol (optional) HTTP protocol (either 'http' 'https') (DEFAULT: https) path (optional) base path BrAPI endpoints (without version) (DEFAULT: /brapi/) version (optional) BrAPI version use (DEFAULT: v2)","code":""},{"path":"/reference/createBrAPIConnection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create BrAPI Connection — createBrAPIConnection","text":"BrAPIConnection","code":""},{"path":"/reference/createBrAPIConnection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create BrAPI Connection — createBrAPIConnection","text":"","code":"wheat <- createBrAPIConnection(\"wheat.triticeaetoolbox.org\") oatv1 <- createBrAPIConnection(\"oat.triticeaetoolbox.org\", version=\"v1\")"},{"path":"/reference/getBrAPIConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Known BrAPI Connection — getBrAPIConnection","title":"Get Known BrAPI Connection — getBrAPIConnection","text":"Get connection details known BrAPI server","code":""},{"path":"/reference/getBrAPIConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Known BrAPI Connection — getBrAPIConnection","text":"","code":"getBrAPIConnection(name = NULL)"},{"path":"/reference/getBrAPIConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Known BrAPI Connection — getBrAPIConnection","text":"name name known BrAPI server","code":""},{"path":"/reference/getBrAPIConnection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Known BrAPI Connection — getBrAPIConnection","text":"BrAPIConnection","code":""},{"path":"/reference/getBrAPIConnection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Known BrAPI Connection — getBrAPIConnection","text":"","code":"wheat <- getBrAPIConnection(\"T3/Wheat\") cassava <- getBrAPIConnection(\"Cassavabase\")"},{"path":"/reference/listBrAPIConnections.html","id":null,"dir":"Reference","previous_headings":"","what":"List Known BrAPI Connections — listBrAPIConnections","title":"List Known BrAPI Connections — listBrAPIConnections","text":"List known BrAPI connections can used getBrAPIConnection(name).","code":""},{"path":"/reference/listBrAPIConnections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Known BrAPI Connections — listBrAPIConnections","text":"","code":"listBrAPIConnections()"},{"path":"/reference/listBrAPIConnections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Known BrAPI Connections — listBrAPIConnections","text":"","code":"listBrAPIConnections() #> Known BrAPI Connections: #>   T3/Wheat = wheat.triticeaetoolbox.org [v2] #>   T3/Wheat Sandbox = wheat-sandbox.triticeaetoolbox.org [v2] #>   T3/Oat = oat.triticeaetoolbox.org [v2] #>   T3/Oat Sandbox = oat-sandbox.triticeaetoolbox.org [v2] #>   T3/Barley = barley.triticeaetoolbox.org [v2] #>   T3/Barley Sandbox = barley-sandbox.triticeaetoolbox.org [v2] #>   Cassavabase = cassavabase.org [v2]"}]
